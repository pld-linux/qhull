--- qhull-2015.2/CMakeLists.txt.orig	2016-01-19 01:21:32.000000000 +0100
+++ qhull-2015.2/CMakeLists.txt	2016-03-06 20:39:15.762583423 +0100
@@ -331,14 +331,16 @@
 include_directories(${CMAKE_SOURCE_DIR}/src)
 
 if(CMAKE_BUILD_TYPE MATCHES "[dD]ebug")
-    set(qhull_CPP qhullcpp_d)
+    set(qhull_CPP_SHARED qhullcpp_d)
+    set(qhull_CPP_STATIC qhullcppstatic_d)
     set(qhull_SHARED qhull_d) 
     set(qhull_SHAREDP qhull_pd)
     set(qhull_SHAREDR qhull_rd)
     set(qhull_STATIC qhullstatic_d)
     set(qhull_STATICR qhullstatic_rd)
 else()
-    set(qhull_CPP qhullcpp)
+    set(qhull_CPP_SHARED qhullcpp)
+    set(qhull_CPP_STATIC qhullcppstatic)
     set(qhull_SHARED libqhull)  # Temporarily avoid name conflict with qhull executable
     set(qhull_SHAREDP qhull_p)
     set(qhull_SHAREDR qhull_r)
@@ -348,7 +350,7 @@
 
 set(
     qhull_TARGETS_INSTALL
-        ${qhull_CPP} ${qhull_STATIC} ${qhull_STATICR} ${qhull_SHAREDR}
+        ${qhull_CPP_SHARED} ${qhull_CPP_STATIC} ${qhull_STATIC} ${qhull_STATICR} ${qhull_SHAREDR}
         qhull rbox qconvex qdelaunay qvoronoi qhalf
         ${qhull_SHARED} ${qhull_SHAREDP}  # Deprecated, use qhull_r instead
 )
@@ -401,15 +403,6 @@
 
 if(UNIX)
     target_link_libraries(${qhull_SHARED} m)
-    if(APPLE)
-        set_target_properties(${qhull_SHARED} PROPERTIES 
-            INSTALL_NAME_DIR "${LIB_INSTALL_DIR}")
-    else()
-        set_target_properties(${qhull_SHARED} PROPERTIES 
-            INSTALL_RPATH "${LIB_INSTALL_DIR}"
-            INSTALL_RPATH_USE_LINK_PATH TRUE
-            BUILD_WITH_INSTALL_RPATH FALSE)
-    endif()
 endif(UNIX)
 
 # ---------------------------------------
@@ -426,17 +419,13 @@
 
 if(UNIX)
     target_link_libraries(${qhull_SHAREDP} m)
-    if(APPLE)
-        set_target_properties(${qhull_SHAREDP} PROPERTIES 
-            INSTALL_NAME_DIR "${LIB_INSTALL_DIR}")
-    else()
-        set_target_properties(${qhull_SHAREDP} PROPERTIES 
-            INSTALL_RPATH "${LIB_INSTALL_DIR}"
-            INSTALL_RPATH_USE_LINK_PATH TRUE
-            BUILD_WITH_INSTALL_RPATH FALSE)
-    endif()
 endif(UNIX)
 
+add_library(${qhull_CPP_SHARED} SHARED ${libqhullcpp_SOURCES})
+set_target_properties(${qhull_CPP_SHARED} PROPERTIES
+    SOVERSION ${qhull_SOVERSION} VERSION ${qhull_VERSION})
+target_link_libraries(${qhull_CPP_SHARED} ${qhull_SHARED})
+
 # ---------------------------------------
 # Define static libraries qhullstatic (non-reentrant) and qhullstatic_r (reentrant)
 # ---------------------------------------
@@ -459,8 +448,8 @@
 #     Do not create libqhullcpp as a shared library.  Qhull C++ classes may change layout and size. 
 # ---------------------------------------
 
-add_library(${qhull_CPP} STATIC ${libqhullcpp_SOURCES})
-set_target_properties(${qhull_CPP} PROPERTIES
+add_library(${qhull_CPP_STATIC} STATIC ${libqhullcpp_SOURCES})
+set_target_properties(${qhull_CPP_STATIC} PROPERTIES
     VERSION ${qhull_VERSION})
 
 # ---------------------------------------
@@ -477,22 +466,22 @@
 set(qhalf_SOURCES       src/qhalf/qhalf.c)
 
 add_executable(qhull ${qhull_SOURCES})
-target_link_libraries(qhull ${qhull_STATICR})
+target_link_libraries(qhull ${qhull_STATICR} m)
 
 add_executable(rbox ${rbox_SOURCES})
-target_link_libraries(rbox ${qhull_STATIC})
+target_link_libraries(rbox ${qhull_STATIC} m)
 
 add_executable(qconvex ${qconvex_SOURCES})
-target_link_libraries(qconvex ${qhull_STATIC})
+target_link_libraries(qconvex ${qhull_STATIC} m)
 
 add_executable(qdelaunay ${qdelaunay_SOURCES})
-target_link_libraries(qdelaunay ${qhull_STATIC})
+target_link_libraries(qdelaunay ${qhull_STATIC} m)
 
 add_executable(qvoronoi ${qvoronoi_SOURCES})
-target_link_libraries(qvoronoi ${qhull_STATIC})
+target_link_libraries(qvoronoi ${qhull_STATIC} m)
 
 add_executable(qhalf ${qhalf_SOURCES})
-target_link_libraries(qhalf ${qhull_STATIC})
+target_link_libraries(qhalf ${qhull_STATIC} m)
 
 # ---------------------------------------
 # Define options for linking to qhull_SHAREDR or qhull_SHARED
@@ -527,7 +516,7 @@
 
 add_executable(user_eg ${user_eg_SOURCES})
 # user_eg may be linked to qhull_STATICR if user_eg_DEFINES is removed
-target_link_libraries(user_eg ${qhull_SHAREDR})
+target_link_libraries(user_eg ${qhull_SHAREDR} m)
 set_target_properties(user_eg PROPERTIES
     COMPILE_DEFINITIONS "${user_eg_DEFINES}")
 
@@ -539,7 +528,7 @@
 
 add_executable(user_eg2 ${user_eg2_SOURCES})
 # user_eg2 may be linked to qhull_SHAREDR if user_eg2_DEFINES is added
-target_link_libraries(user_eg2 ${qhull_STATICR})
+target_link_libraries(user_eg2 ${qhull_STATICR} m)
 
 # ---------------------------------------
 # Define user_eg3 linked to qhullstatic_r and qhullcpp static library
@@ -552,7 +541,7 @@
 add_executable(user_eg3 ${user_eg3_SOURCES})
 # qhull_STATICR must be last, otherwise qh_fprintf,etc. are not loaded from qhull_CPP
 # user_eg3 may be linked to qhull_SHAREDR if user_eg3_DEFINES is added
-target_link_libraries(user_eg3 ${qhull_CPP} ${qhull_STATICR})
+target_link_libraries(user_eg3 ${qhull_CPP_STATIC} ${qhull_STATICR} m)
 
 # ---------------------------------------
 # qhullp is qhull/unix.c linked to deprecated qh_QHpointer libqhull_p
